1. Users: а есть ли компании в ответе getuserfull?
Тестируем Users, метод getuserfull

Ваша задача — проверить наличие полей в дочерних элементах:

если у юзера есть таски — у 0 элемента есть поля «name» и «id_task»
если у юзера есть компании — у 0 элемента есть поля «name» и «id_company»
Проверяем только то, что поле есть и у него правильный тип данных.



2. Users: хочу только юзеров в ответе!
В запросе можно указать параметр «USER», чтобы в ответе возвращались только юзеры. Это и будем проверять!

Вы будете отправлять запрос в формате json:

{"query": "Ив",
"partyType": "USER"}

Ваша задача

Проверить, что:

в ответе реально только юзеры
Сделать надо в 2 вариантах:

через for
через forEach



3. Users: есть ли Андрей в ответе?
Отправляем запрос в формате json:

{
"query": "Ан"
}

Мы хотим убедиться в том, что среди ответов будет имя «Андрей».

.

Ваша задача

Проверить, что:

в ответе есть Андрей — мы не знаем, какой он будет по счету.
Учтите, что номер элемента массива может сдвигаться. Так что завязываться на конкретный текущий номер будет очень нехорошо!



4. Users: тестируем компании в ответе getuserfull
Тестируем Users, метод getuserfull

Ваша задача в этом методе:

-через SendRequest создать компанию
-через SendRequest создать юзера, привязав к свежесозданной компании (учтите, что запросы в Postman идут асинхронно. 
-дернуть сам метод getuserfull по юзеру
-проверить, что к юзеру привязана именно ваша компания